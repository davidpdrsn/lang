WHITESPACE = _{ " " | "\n" | "\r" | "\t" }
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

program = { SOI ~ function+ ~ EOI }

function = {
  "fn"
  ~ identifier
  ~ "(" ~ parameters ~ ")"
  ~ ("->" ~ type_)?
  ~ "{" ~ function_body ~ "}"
}
function_body = { statement* }

type_ = { identifier | list_type }
list_type = { "[" ~ type_ ~ "]"}

statement = {
  function_call ~ ";"
  | return_statement ~ ";"
  | variable_binding ~ ";"
  | reassign_variable ~ ";"
  | if_statement
}

return_statement = { "return" ~ expression }

variable_binding = { "let" ~ identifier ~ (":" ~ type_)? ~ "=" ~ expression }

reassign_variable = { identifier ~ "=" ~ expression }

if_statement = {
    "if" ~ expression ~ "{" ~ if_statement_body ~ "}" ~ ("else" ~ "{" ~ if_statement_body ~ "}")?
}
if_statement_body = { statement* }

parameters = { ((identifier ~ ":" ~ type_ ~ ","?) ~ ","?)* }
arguments = { ((expression ~ ","?) ~ ","?)* }

expression = { term ~ (operation ~ term)* }
term = _{
  string
  | boolean
  | integer
  | function_call
  | identifier
  | list
  | "(" ~ expression ~ ")"
}

operation = _{ add | subtract | multiply | divide | and | or }
add = { "+" }
subtract = { "-" }
multiply = { "*" }
divide = { "/" }
and = { "&&" }
or = { "||" }

function_call = { identifier ~ "(" ~ arguments ~ ")" }

string = ${ "\"" ~ inner ~ "\"" }
inner = @{ char* }
char = {
    !("\"" | "\\") ~ ANY
    | "\\" ~ ("\"" | "\\" | "/" | "b" | "f" | "n" | "r" | "t")
    | "\\" ~ ("u" ~ ASCII_HEX_DIGIT{4})
}

integer = { ASCII_DIGIT+ }

boolean = { "true" | "false" }

list = { "[" ~ list_elements ~ "]" }
list_elements = _{ ((expression ~ ","?) ~ ","?)* }

identifier = @{ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }
